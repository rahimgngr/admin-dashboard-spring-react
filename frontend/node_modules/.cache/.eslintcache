[{"/home/rahimgng/vscode/admin-dashboard/frontend/src/index.js":"1","/home/rahimgng/vscode/admin-dashboard/frontend/src/App.js":"2","/home/rahimgng/vscode/admin-dashboard/frontend/src/reportWebVitals.js":"3","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/NavigationBar.js":"4","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/WelcomeComponent.js":"5","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/FooterComponent.js":"6","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProjectList.js":"7","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddUser.js":"8","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/UserList.js":"9","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddProject.js":"10","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddProgress.js":"11","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProgressList.js":"12","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ToastComponent.js":"13","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/Login.js":"14"},{"size":500,"mtime":1633939800809,"results":"15","hashOfConfig":"16"},{"size":1645,"mtime":1635256165537,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1633939800809,"results":"18","hashOfConfig":"16"},{"size":3921,"mtime":1635256206740,"results":"19","hashOfConfig":"16"},{"size":2099,"mtime":1635256137583,"results":"20","hashOfConfig":"16"},{"size":411,"mtime":1634071011019,"results":"21","hashOfConfig":"16"},{"size":7691,"mtime":1635246619031,"results":"22","hashOfConfig":"16"},{"size":5393,"mtime":1635235711862,"results":"23","hashOfConfig":"16"},{"size":6481,"mtime":1635235701375,"results":"24","hashOfConfig":"16"},{"size":6041,"mtime":1635235610365,"results":"25","hashOfConfig":"16"},{"size":4816,"mtime":1635238863182,"results":"26","hashOfConfig":"16"},{"size":2215,"mtime":1635238936199,"results":"27","hashOfConfig":"16"},{"size":806,"mtime":1634040529586,"results":"28","hashOfConfig":"16"},{"size":104,"mtime":1635247611755,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1421ldt",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/rahimgng/vscode/admin-dashboard/frontend/src/index.js",[],["60","61"],"/home/rahimgng/vscode/admin-dashboard/frontend/src/App.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/reportWebVitals.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/NavigationBar.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/WelcomeComponent.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/FooterComponent.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProjectList.js",["62"],"/* eslint-disable react/jsx-no-duplicate-props */\nimport React, { useEffect, useState } from \"react\";\nimport {\n  InputGroup,\n  ButtonGroup,\n  Card,\n  Table,\n  Button,\n  FormControl,\n  ProgressBar,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst calculateDaysLeft = (startDate, endDate) => {\n  if (!moment.isMoment(startDate)) startDate = moment(startDate);\n  if (!moment.isMoment(endDate)) endDate = moment(endDate);\n\n  return endDate.diff(startDate, \"days\");\n};\n\nfunction ProjectList() {\n  const [projects, setProjects] = useState([]);\n  const [show, setShow] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [projectsPerPage] = useState(5);\n  const [totalPages, setTotalPages] = useState([]);\n  const [totalElements, setTotalElements] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchRes, setSearchRes] = useState([]);\n\n  // for get data\n  const getProject = async (currentpage) => {\n    currentpage -= 1;\n    await axios(\n      `http://localhost:8080/project/get?page=${currentpage}&size=${projectsPerPage}`\n    ).then(\n      (res) => (\n        setProjects(res.data.content),\n        setTotalPages(res.data.totalPages),\n        setTotalElements(res.data.totalElements),\n        setCurrentPage(res.data.number + 1)\n      )\n    );\n  };\n\n  // initalize get request\n  useEffect(() => {\n    getProject(currentPage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  // delete data with spesific id\n  const deleteProject = async (projectId) => {\n    await axios\n      .delete(`http://localhost:8080/project/ ${projectId}`)\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setTimeout(() => setShow(false), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n\n  // Button pagination stuff\n  const firstPage = () => {\n    if (currentPage > 1) {\n      getProject(1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      getProject(currentPage - 1);\n    }\n  };\n  const lastPage = () => {\n    if (currentPage < Math.ceil(totalElements / projectsPerPage)) {\n      getProject(Math.ceil(totalElements / projectsPerPage));\n    }\n  };\n  const nextPage = () => {\n    if (currentPage < Math.ceil(totalElements / projectsPerPage)) {\n      getProject(currentPage + 1);\n    }\n  };\n\n  // formcontrol page number control stuff\n  const changePage = (e) => {\n    setCurrentPage(e.target.value <= totalPages ? e.target.value : totalPages);\n  };\n\n  // get typed character\n  const searchChange = (e) => {\n    setSearch(e.target.value);\n\n    if (search !== \"\") {\n      const newProjectList = projects.filter((project) => {\n        return Object.values(project)\n          .join(\" \")\n          .toLowerCase()\n          .includes(search.toLowerCase());\n      });\n      setSearchRes(newProjectList);\n    } else {\n      setSearchRes(projects);\n    }\n  };\n\n  return (\n    <div name=\"project\" style={{ margin: \"132px 50px\" }}>\n      <div style={{ display: show ? \"block\" : \"none\" }}>\n        <ToastComponent\n          children={{ show: show, message: \"Project Deleted!\", type: \"danger\" }}\n        />\n      </div>\n\n      <Card\n        className={\"border border-dark bg-dark text-white\"}\n        style={{ margin: \"45px 0\" }}\n      >\n        <Card.Header>\n          <div style={{ float: \"left\" }}>Project List</div>\n          <div style={{ float: \"right\" }}>\n            <InputGroup size=\"sm\">\n              <FormControl\n                type=\"search\"\n                placeholder=\"Search\"\n                name=\"search\"\n                aria-label=\"Search\"\n                className={\"bg-dark text-white\"}\n                onChange={searchChange}\n              />\n            </InputGroup>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th>Project Name</th>\n                <th>Start Date</th>\n                <th>End Date</th>\n                <th> Total Days</th>\n                <th>Progress</th>\n                <th>Actions</th>\n              </tr>\n              <tr></tr>\n            </thead>\n            <tbody>\n              {projects.length === 0 ? (\n                <tr align=\"center\">\n                  <td colSpan=\"5\">No Projects Available..</td>\n                </tr>\n              ) : (\n                (search.length < 1 ? projects : searchRes).map((project) => (\n                  <tr key={project.id}>\n                    <td>{project.projectName}</td>\n                    <td>{project.startDate}</td>\n                    <td>{project.endDate}</td>\n                    <td>\n                      {calculateDaysLeft(project.startDate, project.endDate)}\n                    </td>\n                    <td>\n                      <ProgressBar\n                        now={calculateDaysLeft(\n                          project.startDate,\n                          project.endDate\n                        )}\n                      />\n                    </td>\n                    <td>\n                      <ButtonGroup>\n                        <Link\n                          to={\"/edit-project/\" + project.id}\n                          className=\"btn btn-sm btn-outline-primary\"\n                        >\n                          edit\n                        </Link>\n\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => deleteProject(project.id)}\n                        >\n                          delete\n                        </Button>\n                      </ButtonGroup>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </Table>\n        </Card.Body>\n        <Card.Footer>\n          <div style={{ float: \"left\" }}>\n            {\" \"}\n            {currentPage} of {totalPages}\n          </div>\n          <div style={{ float: \"right\" }}>\n            <InputGroup size=\"sm\">\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === 1 ? true : false}\n                onClick={firstPage}\n              >\n                First\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === 1 ? true : false}\n                onClick={prevPage}\n              >\n                Prev\n              </Button>\n\n              <FormControl\n                style={{\n                  textAlign: \"center\",\n                  width: \"40px\",\n                  color: \"white\",\n                }}\n                className={\"bg-dark\"}\n                name=\"currentPage\"\n                defaultValue={currentPage}\n                onChange={changePage}\n              />\n\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === totalPages ? true : false}\n                onClick={nextPage}\n              >\n                Next\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === totalPages ? true : false}\n                onClick={lastPage}\n              >\n                Last\n              </Button>\n            </InputGroup>\n          </div>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n\nexport default React.memo(ProjectList);\n","/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddUser.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/UserList.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddProject.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddProgress.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProgressList.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ToastComponent.js",[],"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/Login.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":43,"column":38,"nodeType":"69","messageId":"70","endLine":43,"endColumn":39},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation"]