{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst values = {\n  id: \"\",\n  userName: \"\",\n  role: \"\",\n  password: \"\"\n};\n\nfunction AddUser() {\n  _s();\n\n  const [form, setForm] = useState(values);\n  const [method, setMethod] = useState(\"\");\n  const [show, setShow] = useState(false);\n  let history = useHistory();\n  let {\n    id\n  } = useParams(); // user data save\n\n  const submitUser = async e => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:8080/admin/add\", JSON.stringify(form), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setMethod(\"post\");\n        setTimeout(() => userList(true), 1500);\n        setTimeout(() => setShow(false), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  }; // user data update\n\n\n  const updateUser = async e => {\n    e.preventDefault();\n    await axios.put(`http://localhost:8080/admin/put/${id}`, JSON.stringify(form), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setMethod(\"put\");\n        setTimeout(() => setShow(false), 1500);\n        setTimeout(() => userList(true), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  }; // to add in user list\n\n\n  const userChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  }; // to reset user values that we wrote\n\n\n  const resetUser = () => {\n    setForm(values);\n  }; // back to user list\n\n\n  const userList = () => {\n    history.push(\"/list-users\");\n  }; // find user with id to show when we want to update\n\n\n  const findUserById = async id => {\n    await axios.get(`http://localhost:8080/admin/get/${id}`).then(res => {\n      if (res.data != null) {\n        setForm({\n          id: res.data.id,\n          userName: res.data.userName,\n          password: res.data.password,\n          role: res.data.role\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // for memo\n\n\n  useEffect(() => {\n    findUserById(id);\n  }, [id]);\n  console.log(method);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    name: \"addUser\",\n    style: {\n      margin: \"132px 50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: show ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ToastComponent, {\n        children: {\n          show: show,\n          message: method === \"post\" ? \"User Saved!\" : \"User Updated!\",\n          type: \"success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      style: {\n        margin: \"45px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: id ? \"Update User\" : \"Save User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"userFormId\",\n        onSubmit: id ? updateUser : submitUser,\n        onReset: resetUser,\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"fromGridUserName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"userName\",\n              placeholder: \"Enter Username\",\n              className: \"bg-dark text-white\",\n              onChange: userChange,\n              value: form.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter pass\",\n              className: \"bg-dark text-white\",\n              onChange: userChange,\n              value: form.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"role\",\n              placeholder: \"Enter Role\",\n              className: \"bg-dark text-white\",\n              onChange: userChange,\n              value: form.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"submit\",\n            variant: \"success\",\n            style: {\n              margin: \"2px\"\n            },\n            children: id ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"reset\",\n            variant: \"info\",\n            style: {\n              margin: \"2px\"\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"info\",\n            style: {\n              margin: \"2px\"\n            },\n            onClick: userList,\n            children: \"User List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddUser, \"ojl0CwWJD3BrfF7e0UDDoG/P+I4=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/frontend/src/component/AddUser.js"],"names":["React","useState","useEffect","Card","Form","Button","Col","axios","ToastComponent","useHistory","useParams","values","id","userName","role","password","AddUser","form","setForm","method","setMethod","show","setShow","history","submitUser","e","preventDefault","post","JSON","stringify","headers","then","res","data","setTimeout","userList","updateUser","put","userChange","target","name","value","resetUser","push","findUserById","get","catch","error","console","log","margin","display","message","type","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nconst values = {\n  id: \"\",\n  userName: \"\",\n  role: \"\",\n  password: \"\",\n};\n\nfunction AddUser() {\n  const [form, setForm] = useState(values);\n  const [method, setMethod] = useState(\"\");\n  const [show, setShow] = useState(false);\n  let history = useHistory();\n  let { id } = useParams();\n\n  // user data save\n  const submitUser = async (e) => {\n    e.preventDefault();\n\n    await axios\n      .post(\"http://localhost:8080/admin/add\", JSON.stringify(form), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setMethod(\"post\");\n          setTimeout(() => userList(true), 1500);\n          setTimeout(() => setShow(false), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n\n  // user data update\n  const updateUser = async (e) => {\n    e.preventDefault();\n\n    await axios\n      .put(`http://localhost:8080/admin/put/${id}`, JSON.stringify(form), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setMethod(\"put\");\n          setTimeout(() => setShow(false), 1500);\n          setTimeout(() => userList(true), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n\n  // to add in user list\n  const userChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // to reset user values that we wrote\n  const resetUser = () => {\n    setForm(values);\n  };\n\n  // back to user list\n  const userList = () => {\n    history.push(\"/list-users\");\n  };\n\n  // find user with id to show when we want to update\n  const findUserById = async (id) => {\n    await axios\n      .get(`http://localhost:8080/admin/get/${id}`)\n      .then((res) => {\n        if (res.data != null) {\n          setForm({\n            id: res.data.id,\n            userName: res.data.userName,\n            password: res.data.password,\n            role: res.data.role,\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  // for memo\n  useEffect(() => {\n    findUserById(id);\n  }, [id]);\n  console.log(method);\n  return (\n    <div name=\"addUser\" style={{ margin: \"132px 50px\" }}>\n      <div style={{ display: show ? \"block\" : \"none\" }}>\n        <ToastComponent\n          children={{\n            show: show,\n            message: method === \"post\" ? \"User Saved!\" : \"User Updated!\",\n            type: \"success\",\n          }}\n        />\n      </div>\n\n      <Card\n        className={\"border border-dark bg-dark text-white\"}\n        style={{ margin: \"45px 0px\" }}\n      >\n        <Card.Header>{id ? \"Update User\" : \"Save User\"}</Card.Header>\n\n        <Form\n          id=\"userFormId\"\n          onSubmit={id ? updateUser : submitUser}\n          onReset={resetUser}\n        >\n          <Card.Body>\n            <Form.Group as={Col} controlId=\"fromGridUserName\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                required\n                autoComplete=\"off\"\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Enter Username\"\n                className={\"bg-dark text-white\"}\n                onChange={userChange}\n                value={form.userName}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                required\n                autoComplete=\"off\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter pass\"\n                className={\"bg-dark text-white\"}\n                onChange={userChange}\n                value={form.password}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Role</Form.Label>\n              <Form.Control\n                required\n                autoComplete=\"off\"\n                type=\"text\"\n                name=\"role\"\n                placeholder=\"Enter Role\"\n                className={\"bg-dark text-white\"}\n                onChange={userChange}\n                value={form.role}\n              />\n            </Form.Group>\n          </Card.Body>\n\n          {/* footer */}\n          <Card.Footer style={{ textAlign: \"right\" }}>\n            <Button\n              size=\"sm\"\n              type=\"submit\"\n              variant=\"success\"\n              style={{ margin: \"2px\" }}\n            >\n              {id ? \"Update\" : \"Save\"}\n            </Button>\n            <Button\n              size=\"sm\"\n              type=\"reset\"\n              variant=\"info\"\n              style={{ margin: \"2px\" }}\n            >\n              Reset\n            </Button>\n            <Button\n              size=\"sm\"\n              type=\"button\"\n              variant=\"info\"\n              style={{ margin: \"2px\" }}\n              onClick={userList}\n            >\n              User List\n            </Button>\n          </Card.Footer>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}