{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/src/component/AddProgress.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCurrentDate = (separator = \"-\") => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n  return `${year}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${date}`;\n};\n\nconst values = {\n  id: \"\",\n  userName: \"deneme\",\n  projectName: \"deneme\",\n  startedTime: getCurrentDate(),\n  totalTime: \"\"\n};\n\nfunction ProgressComponent() {\n  _s();\n\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [form, setForm] = useState(values);\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  const [spesProject, setSpesProject] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/project/get/\").then(res => setProjects(res.data));\n    axios.get(\"http://localhost:8080/admin/get/\").then(res => setUsers(res.data));\n  }, []);\n\n  const projectChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n    const index = e.target.selectedIndex;\n    const optionElement = e.target.childNodes[index];\n    const optionElementId = optionElement.getAttribute(\"id\");\n    setTask(optionElementId);\n  };\n\n  const submitProgress = async e => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:8080/progress/add\", JSON.stringify(form), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setMethod(\"post\");\n        setTimeout(() => setShow(false), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  };\n\n  console.log(task);\n  useEffect(() => {\n    axios.get(`http://localhost:8080/project/get/${task}`).then(res => {\n      if (res.data != null) {\n        setSpesProject(res.data);\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  }, [task]);\n  console.log(spesProject);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: show ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ToastComponent, {\n        children: {\n          show: show,\n          message: method === \"post\" ? \"Progress Saved!\" : \"Progress Updated!\",\n          type: \"success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      style: {\n        margin: \"45px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Save Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"progressFormId\",\n        onSubmit: submitProgress,\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            controlId: \"dateId\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"date\",\n              name: \"startedTime\",\n              placeholder: \"Date of Start\",\n              onChange: projectChange,\n              value: form.startedTime,\n              className: \"bg-dark text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"bg-dark text-white\",\n              \"aria-label\": \"select project\",\n              name: \"projectName\",\n              value: form.projectName,\n              onChange: projectChange,\n              children: projects.map((project, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                id: project.id,\n                children: project.projectName\n              }, project.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Set Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"bg-dark text-white\",\n              \"aria-label\": \"select project\",\n              name: \"startTask\",\n              value: form.startTask,\n              onChange: projectChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              className: \"bg-dark text-white\",\n              \"aria-label\": \"select user\",\n              value: form.userName,\n              name: \"userName\",\n              onChange: projectChange,\n              children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: user.userName\n              }, user.id || index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"submit\",\n            variant: \"success\",\n            style: {\n              margin: \"2px\"\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"info\",\n            style: {\n              margin: \"2px\"\n            },\n            children: \"Project List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressComponent, \"lwV6r8yErmaor6ENnZAffPIxxlk=\");\n\n_c = ProgressComponent;\nexport default ProgressComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressComponent\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/src/component/AddProgress.js"],"names":["React","useState","useEffect","Card","Form","Button","Col","axios","ToastComponent","useParams","getCurrentDate","separator","newDate","Date","date","getDate","month","getMonth","year","getFullYear","values","id","userName","projectName","startedTime","totalTime","ProgressComponent","projects","setProjects","users","setUsers","form","setForm","show","setShow","method","setMethod","task","setTask","spesProject","setSpesProject","get","then","res","data","projectChange","e","target","name","value","index","selectedIndex","optionElement","childNodes","optionElementId","getAttribute","submitProgress","preventDefault","post","JSON","stringify","headers","setTimeout","console","log","catch","error","display","message","type","margin","map","project","startTask","user","textAlign"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport { useParams } from \"react-router-dom\";\n\nconst getCurrentDate = (separator = \"-\") => {\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth() + 1;\n  let year = newDate.getFullYear();\n\n  return `${year}${separator}${\n    month < 10 ? `0${month}` : `${month}`\n  }${separator}${date}`;\n};\nconst values = {\n  id: \"\",\n  userName: \"deneme\",\n  projectName: \"deneme\",\n  startedTime: getCurrentDate(),\n  totalTime: \"\",\n};\n\nfunction ProgressComponent() {\n  const [projects, setProjects] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [form, setForm] = useState(values);\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"\");\n  const [task, setTask] = useState(\"\");\n  const [spesProject, setSpesProject] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/project/get/\")\n      .then((res) => setProjects(res.data));\n    axios\n      .get(\"http://localhost:8080/admin/get/\")\n      .then((res) => setUsers(res.data));\n  }, []);\n\n  const projectChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n    const index = e.target.selectedIndex;\n    const optionElement = e.target.childNodes[index];\n    const optionElementId = optionElement.getAttribute(\"id\");\n\n    setTask(optionElementId);\n  };\n\n  const submitProgress = async (e) => {\n    e.preventDefault();\n\n    await axios\n      .post(\"http://localhost:8080/progress/add\", JSON.stringify(form), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setMethod(\"post\");\n          setTimeout(() => setShow(false), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n  console.log(task);\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8080/project/get/${task}`)\n      .then((res) => {\n        if (res.data != null) {\n          setSpesProject(res.data);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, [task]);\n  console.log(spesProject);\n  return (\n    <div>\n      <div style={{ display: show ? \"block\" : \"none\" }}>\n        <ToastComponent\n          children={{\n            show: show,\n            message:\n              method === \"post\" ? \"Progress Saved!\" : \"Progress Updated!\",\n            type: \"success\",\n          }}\n        />\n      </div>\n      <Card\n        className={\"border border-dark bg-dark text-white\"}\n        style={{ margin: \"45px 0px\" }}\n      >\n        <Card.Header>{\"Save Progress\"}</Card.Header>\n\n        <Form id=\"progressFormId\" onSubmit={submitProgress}>\n          <Card.Body>\n            <Form.Group as={Col} controlId=\"dateId\">\n              <Form.Label>Date</Form.Label>\n              <Form.Control\n                required\n                type=\"date\"\n                name=\"startedTime\"\n                placeholder=\"Date of Start\"\n                onChange={projectChange}\n                value={form.startedTime}\n                className={\"bg-dark text-white\"}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col}>\n              <Form.Label>Select Project</Form.Label>\n              <Form.Select\n                className={\"bg-dark text-white\"}\n                aria-label=\"select project\"\n                name=\"projectName\"\n                value={form.projectName}\n                onChange={projectChange}\n              >\n                {projects.map((project, index) => (\n                  <option key={project.id || index} id={project.id}>\n                    {project.projectName}\n                  </option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Set Task</Form.Label>\n              <Form.Select\n                className={\"bg-dark text-white\"}\n                aria-label=\"select project\"\n                name=\"startTask\"\n                value={form.startTask}\n                onChange={projectChange}\n              ></Form.Select>\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Select User</Form.Label>\n              <Form.Select\n                className={\"bg-dark text-white\"}\n                aria-label=\"select user\"\n                value={form.userName}\n                name=\"userName\"\n                onChange={projectChange}\n              >\n                {users.map((user, index) => (\n                  <option key={user.id || index}>{user.userName}</option>\n                ))}\n              </Form.Select>\n            </Form.Group>\n          </Card.Body>\n\n          <Card.Footer style={{ textAlign: \"right\" }}>\n            <Button\n              size=\"sm\"\n              type=\"submit\"\n              variant=\"success\"\n              style={{ margin: \"2px\" }}\n            >\n              Save\n            </Button>\n\n            <Button\n              size=\"sm\"\n              type=\"button\"\n              variant=\"info\"\n              style={{ margin: \"2px\" }}\n            >\n              Project List\n            </Button>\n          </Card.Footer>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default ProgressComponent;\n"]},"metadata":{},"sourceType":"module"}