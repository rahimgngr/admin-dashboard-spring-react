{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/src/component/AddProject.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst values = {\n  id: \"\",\n  projectName: \"\",\n  cost: \"\",\n  time: \"\"\n};\n\nfunction AddProject() {\n  _s();\n\n  const [form, setForm] = useState(values);\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"\");\n  let history = useHistory();\n  let {\n    id\n  } = useParams();\n  const [fromDate, setFromDate] = useState(new Date());\n  const [toDate, setToDate] = useState(new Date());\n  const range = {\n    Today: [moment(), moment()],\n    Yesterday: [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n    \"Last 7 Days\": [moment().subtract(6, \"days\"), moment()],\n    \"Last 30 Days\": [moment().subtract(29, \"days\"), moment()],\n    \"This Month\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n    \"Last Month\": [moment().subtract(1, \"month\").startOf(\"month\"), moment().subtract(1, \"month\").endOf(\"month\")],\n    \"Last Year\": [moment().subtract(1, \"year\").startOf(\"year\"), moment().subtract(1, \"year\").endOf(\"year\")]\n  };\n  /** ---------------------- controller ---------------------- */\n  // Project data save\n\n  const submitProject = async e => {\n    e.preventDefault();\n    await axios.post(\"http://localhost:8080/project/add\", JSON.stringify(form), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setMethod(\"post\");\n        setTimeout(() => setShow(false), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  };\n  /** update */\n  // Project data update\n\n\n  const updateProject = async e => {\n    e.preventDefault();\n    await axios.put(`http://localhost:8080/project/put/${id}`, JSON.stringify(form), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setMethod(\"put\");\n        setTimeout(() => setShow(false), 1500);\n        setTimeout(() => projectList(true), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  }; // find project with id to show when we want to update\n\n\n  const findProjectById = async id => {\n    await axios.get(`http://localhost:8080/project/get/${id}`).then(res => {\n      if (res.data != null) {\n        setForm({\n          id: res.data.id,\n          projectName: res.data.projectName,\n          cost: res.data.cost,\n          time: res.data.time\n        });\n      }\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  /** update end*/\n\n  /** ---------------------- controller end ---------------------- */\n  // to add in project list\n\n\n  const projectChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  }; // to reset project values that we wrote\n\n\n  const resetProject = () => {\n    setForm(values);\n  }; // back to project list\n\n\n  const projectList = () => {\n    history.push(\"/list-project\");\n  }; // for memo\n\n\n  useEffect(() => {\n    findProjectById(id);\n  }, [id]);\n\n  const handleEvent = (event, picker) => {\n    console.log(\"start: \", picker.startDate._d);\n    console.log(\"end: \", picker.endDate._d);\n    setFromDate(picker.startDate._d.toISOString());\n    setToDate(picker.endDate._d.toISOString());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: show ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ToastComponent, {\n        children: {\n          show: show,\n          message: method === \"post\" ? \"Project Saved!\" : \"Project Updated!\",\n          type: \"success\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      style: {\n        margin: \"45px 0px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: id ? \"Update Project\" : \"Save Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        id: \"projectFormId\",\n        onSubmit: id ? updateProject : submitProject,\n        onReset: resetProject,\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Project Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"text\",\n              name: \"projectName\",\n              placeholder: \"Enter project name\",\n              className: \"bg-dark text-white\",\n              onChange: projectChange,\n              value: form.projectName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              autoComplete: \"off\",\n              type: \"number\",\n              step: \"any\",\n              name: \"cost\",\n              placeholder: \"Enter project cost\",\n              className: \"bg-dark text-white\",\n              onChange: projectChange,\n              value: form.cost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Col,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DateRangePicker, {\n              showDropdowns: true,\n              ranges: range,\n              timePickerIncrement: 1,\n              startDate: fromDate,\n              endDate: toDate,\n              opens: \"right\",\n              format: \"DD-MM-YYYY\",\n              autoUpdateInput: true,\n              alwaysShowCalendars: true,\n              linkedCalendars: true,\n              onApply: this.datePickerHandler,\n              autoApply: true,\n              applyClass: \"btn btn-sm btn-primary btn-raised\",\n              cancelClass: \"btn btn-sm btn-flat\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                children: [moment(fromDate).format(\"LL\"), \" to\", \" \", moment(toDate).format(\"LL\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          style: {\n            textAlign: \"right\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"submit\",\n            variant: \"success\",\n            style: {\n              margin: \"2px\"\n            },\n            children: id ? \"Update\" : \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"reset\",\n            variant: \"info\",\n            style: {\n              margin: \"2px\"\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            type: \"button\",\n            variant: \"info\",\n            style: {\n              margin: \"2px\"\n            },\n            onClick: projectList,\n            children: \"Project List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProject, \"Nf2B6p6VMUDrEKDBCkKciaKAv8k=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = AddProject;\nexport default _c2 = /*#__PURE__*/React.memo(AddProject);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddProject\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/src/component/AddProject.js"],"names":["React","useState","useEffect","Card","Form","Button","Col","useHistory","useParams","axios","ToastComponent","DateRangePicker","moment","values","id","projectName","cost","time","AddProject","form","setForm","show","setShow","method","setMethod","history","fromDate","setFromDate","Date","toDate","setToDate","range","Today","Yesterday","subtract","startOf","endOf","submitProject","e","preventDefault","post","JSON","stringify","headers","then","res","data","setTimeout","updateProject","put","projectList","findProjectById","get","catch","error","console","projectChange","target","name","value","resetProject","push","handleEvent","event","picker","log","startDate","_d","endDate","toISOString","display","message","type","margin","datePickerHandler","format","textAlign","memo"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Form, Button, Col } from \"react-bootstrap\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ToastComponent from \"./ToastComponent\";\nimport DateRangePicker from \"react-bootstrap-daterangepicker\";\nimport \"bootstrap-daterangepicker/daterangepicker.css\";\nimport moment from \"moment\";\n\nconst values = {\n  id: \"\",\n  projectName: \"\",\n  cost: \"\",\n  time: \"\",\n};\n\nfunction AddProject() {\n  const [form, setForm] = useState(values);\n  const [show, setShow] = useState(false);\n  const [method, setMethod] = useState(\"\");\n\n  let history = useHistory();\n  let { id } = useParams();\n\n  const [fromDate, setFromDate] = useState(new Date());\n  const [toDate, setToDate] = useState(new Date());\n  const range = {\n    Today: [moment(), moment()],\n    Yesterday: [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n    \"Last 7 Days\": [moment().subtract(6, \"days\"), moment()],\n    \"Last 30 Days\": [moment().subtract(29, \"days\"), moment()],\n    \"This Month\": [moment().startOf(\"month\"), moment().endOf(\"month\")],\n    \"Last Month\": [\n      moment().subtract(1, \"month\").startOf(\"month\"),\n      moment().subtract(1, \"month\").endOf(\"month\"),\n    ],\n    \"Last Year\": [\n      moment().subtract(1, \"year\").startOf(\"year\"),\n      moment().subtract(1, \"year\").endOf(\"year\"),\n    ],\n  };\n\n  /** ---------------------- controller ---------------------- */\n\n  // Project data save\n  const submitProject = async (e) => {\n    e.preventDefault();\n\n    await axios\n      .post(\"http://localhost:8080/project/add\", JSON.stringify(form), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setMethod(\"post\");\n          setTimeout(() => setShow(false), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n\n  /** update */\n  // Project data update\n  const updateProject = async (e) => {\n    e.preventDefault();\n\n    await axios\n      .put(`http://localhost:8080/project/put/${id}`, JSON.stringify(form), {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((res) => {\n        if (res.data != null) {\n          setShow(true);\n          setMethod(\"put\");\n          setTimeout(() => setShow(false), 1500);\n          setTimeout(() => projectList(true), 1500);\n        } else {\n          setShow(false);\n        }\n      });\n  };\n\n  // find project with id to show when we want to update\n  const findProjectById = async (id) => {\n    await axios\n      .get(`http://localhost:8080/project/get/${id}`)\n      .then((res) => {\n        if (res.data != null) {\n          setForm({\n            id: res.data.id,\n            projectName: res.data.projectName,\n            cost: res.data.cost,\n            time: res.data.time,\n          });\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  /** update end*/\n\n  /** ---------------------- controller end ---------------------- */\n\n  // to add in project list\n  const projectChange = (e) => {\n    setForm({ ...form, [e.target.name]: e.target.value });\n  };\n\n  // to reset project values that we wrote\n  const resetProject = () => {\n    setForm(values);\n  };\n\n  // back to project list\n  const projectList = () => {\n    history.push(\"/list-project\");\n  };\n\n  // for memo\n  useEffect(() => {\n    findProjectById(id);\n  }, [id]);\n\n  const handleEvent = (event, picker) => {\n    console.log(\"start: \", picker.startDate._d);\n    console.log(\"end: \", picker.endDate._d);\n    setFromDate(picker.startDate._d.toISOString());\n    setToDate(picker.endDate._d.toISOString());\n  };\n\n  return (\n    <div>\n      <div style={{ display: show ? \"block\" : \"none\" }}>\n        <ToastComponent\n          children={{\n            show: show,\n            message: method === \"post\" ? \"Project Saved!\" : \"Project Updated!\",\n            type: \"success\",\n          }}\n        />\n      </div>\n\n      <Card\n        className={\"border border-dark bg-dark text-white\"}\n        style={{ margin: \"45px 0px\" }}\n      >\n        <Card.Header>{id ? \"Update Project\" : \"Save Project\"}</Card.Header>\n\n        <Form\n          id=\"projectFormId\"\n          onSubmit={id ? updateProject : submitProject}\n          onReset={resetProject}\n        >\n          <Card.Body>\n            <Form.Group as={Col}>\n              <Form.Label>Project Name</Form.Label>\n              <Form.Control\n                required\n                autoComplete=\"off\"\n                type=\"text\"\n                name=\"projectName\"\n                placeholder=\"Enter project name\"\n                className={\"bg-dark text-white\"}\n                onChange={projectChange}\n                value={form.projectName}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label>Cost</Form.Label>\n              <Form.Control\n                required\n                autoComplete=\"off\"\n                type=\"number\"\n                step=\"any\"\n                name=\"cost\"\n                placeholder=\"Enter project cost\"\n                className={\"bg-dark text-white\"}\n                onChange={projectChange}\n                value={form.cost}\n              />\n            </Form.Group>\n            <Form.Group as={Col}>\n              <Form.Label></Form.Label>\n              <DateRangePicker\n                showDropdowns\n                ranges={range}\n                timePickerIncrement={1}\n                startDate={fromDate}\n                endDate={toDate}\n                opens=\"right\"\n                format=\"DD-MM-YYYY\"\n                autoUpdateInput={true}\n                alwaysShowCalendars={true}\n                linkedCalendars={true}\n                onApply={this.datePickerHandler}\n                autoApply={true}\n                applyClass=\"btn btn-sm btn-primary btn-raised\"\n                cancelClass=\"btn btn-sm btn-flat\"\n              >\n                <button>\n                  {moment(fromDate).format(\"LL\")} to{\" \"}\n                  {moment(toDate).format(\"LL\")}\n                </button>\n              </DateRangePicker>\n            </Form.Group>\n          </Card.Body>\n          <Card.Footer style={{ textAlign: \"right\" }}>\n            <Button\n              size=\"sm\"\n              type=\"submit\"\n              variant=\"success\"\n              style={{ margin: \"2px\" }}\n            >\n              {id ? \"Update\" : \"Save\"}\n            </Button>\n            <Button\n              size=\"sm\"\n              type=\"reset\"\n              variant=\"info\"\n              style={{ margin: \"2px\" }}\n            >\n              Reset\n            </Button>\n            <Button\n              size=\"sm\"\n              type=\"button\"\n              variant=\"info\"\n              style={{ margin: \"2px\" }}\n              onClick={projectList}\n            >\n              Project List\n            </Button>\n          </Card.Footer>\n        </Form>\n      </Card>\n    </div>\n  );\n}\n\nexport default React.memo(AddProject);\n"]},"metadata":{},"sourceType":"module"}