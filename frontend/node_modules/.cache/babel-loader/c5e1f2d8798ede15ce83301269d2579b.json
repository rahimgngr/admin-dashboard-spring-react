{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProgressList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressList() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/progress/get/\").then(res => setProjects(res.data)).catch(err => {\n      console.log(\"error\" + err);\n    });\n  }, []);\n  useEffect(() => {\n    let proje = [];\n    let user = [];\n    const groupingArr = projects.reduce((projectsSoFar, {\n      userName,\n      projectName\n    }) => {\n      if (!projectsSoFar[userName]) projectsSoFar[userName] = [];\n      projectsSoFar[userName].push(projectName);\n      return projectsSoFar;\n    }, {} //initial valuesss\n    );\n    {\n      Object.keys(groupingArr).map(item => {\n        user.push(item);\n        return item;\n      });\n    }\n    {\n      Object.values(groupingArr).map((item, index) => {\n        proje.push(item.length);\n        return item;\n      });\n    }\n    setChartData({\n      labels: user,\n      datasets: [{\n        label: \"how many projects per users have\",\n        data: proje,\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 5\n      }]\n    });\n  }, [projects]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    name: \"progList\",\n    style: {\n      margin: \"132px 50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"THICCNESS SCALE\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressList, \"ZOhaQVW2eyr2EH5l1d7KV/nG5es=\");\n\n_c = ProgressList;\nexport default ProgressList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressList\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/frontend/src/component/ProgressList.js"],"names":["React","useEffect","useState","Line","axios","ProgressList","chartData","setChartData","projects","setProjects","get","then","res","data","catch","err","console","log","proje","user","groupingArr","reduce","projectsSoFar","userName","projectName","push","Object","keys","map","item","values","index","length","labels","datasets","label","backgroundColor","borderWidth","margin","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":"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","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nfunction ProgressList() {\n  const [chartData, setChartData] = useState({});\n  const [projects, setProjects] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/progress/get/\")\n      .then((res) => setProjects(res.data))\n      .catch((err) => {\n        console.log(\"error\" + err);\n      });\n  }, []);\n\n  useEffect(() => {\n    let proje = [];\n    let user = [];\n\n    const groupingArr = projects.reduce(\n      (projectsSoFar, { userName, projectName }) => {\n        if (!projectsSoFar[userName]) projectsSoFar[userName] = [];\n        projectsSoFar[userName].push(projectName);\n        return projectsSoFar;\n      },\n      {} //initial valuesss\n    );\n    {\n      Object.keys(groupingArr).map((item) => {\n        user.push(item);\n        return item;\n      });\n    }\n    {\n      Object.values(groupingArr).map((item, index) => {\n        proje.push(item.length);\n        return item;\n      });\n    }\n\n    setChartData({\n      labels: user,\n      datasets: [\n        {\n          label: \"how many projects per users have\",\n          data: proje,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 5,\n        },\n      ],\n    });\n  }, [projects]);\n  return (\n    <div name=\"progList\" style={{ margin: \"132px 50px\" }}>\n      <h1>Projects</h1>\n      <div>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: \"THICCNESS SCALE\", display: true },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressList;\n"]},"metadata":{},"sourceType":"module"}