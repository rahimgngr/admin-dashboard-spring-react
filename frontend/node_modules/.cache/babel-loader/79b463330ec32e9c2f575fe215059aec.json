{"ast":null,"code":"import ChartJS from 'chart.js/auto';\nexport { default as Chart } from 'chart.js/auto';\nexport { defaults } from 'chart.js';\nimport React, { forwardRef, useRef, useMemo, useState, useImperativeHandle, useEffect } from 'react';\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectSpread(target) {\n  var _arguments = arguments,\n      _loop = function (i) {\n    var source = _arguments[i] != null ? _arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  };\n\n  for (var i = 1; i < arguments.length; i++) _loop(i);\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n}\n\nfunction ChartComponent(_param, ref) {\n  var _height = _param.height,\n      height = _height === void 0 ? 150 : _height,\n      _width = _param.width,\n      width = _width === void 0 ? 300 : _width,\n      _redraw = _param.redraw,\n      redraw = _redraw === void 0 ? false : _redraw,\n      type = _param.type,\n      data = _param.data,\n      options = _param.options,\n      _plugins = _param.plugins,\n      plugins = _plugins === void 0 ? [] : _plugins,\n      getDatasetAtEvent = _param.getDatasetAtEvent,\n      getElementAtEvent = _param.getElementAtEvent,\n      getElementsAtEvent = _param.getElementsAtEvent,\n      fallbackContent = _param.fallbackContent,\n      onClickProp = _param.onClick,\n      props = _objectWithoutProperties(_param, [\"height\", \"width\", \"redraw\", \"type\", \"data\", \"options\", \"plugins\", \"getDatasetAtEvent\", \"getElementAtEvent\", \"getElementsAtEvent\", \"fallbackContent\", \"onClick\"]);\n\n  var canvas = useRef(null);\n  var computedData = useMemo(function () {\n    if (typeof data === 'function') {\n      return canvas.current ? data(canvas.current) : {\n        datasets: []\n      };\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  var ref1 = _slicedToArray(useState()),\n      chart = ref1[0],\n      setChart = ref1[1];\n\n  useImperativeHandle(ref, function () {\n    return chart;\n  }, [chart]);\n\n  var renderChart = function () {\n    if (!canvas.current) return;\n    setChart(new ChartJS(canvas.current, {\n      type: type,\n      data: computedData,\n      options: options,\n      plugins: plugins\n    }));\n  };\n\n  var onClick = function (event) {\n    if (onClickProp) {\n      onClickProp(event);\n    }\n\n    if (!chart) return;\n    getDatasetAtEvent && getDatasetAtEvent(chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n      intersect: true\n    }, false), event);\n    getElementAtEvent && getElementAtEvent(chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n      intersect: true\n    }, false), event);\n    getElementsAtEvent && getElementsAtEvent(chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n      intersect: true\n    }, false), event);\n  };\n\n  var updateChart = function () {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = _objectSpread({}, options);\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    var tmp = computedData.datasets,\n        newDataSets = tmp === void 0 ? [] : tmp,\n        newChartData = _objectWithoutProperties(computedData, [\"datasets\"]);\n\n    var _data = chart.config.data,\n        tmp1 = _data.datasets,\n        currentDataSets = tmp1 === void 0 ? [] : tmp1; // copy values\n\n    assign(chart.config.data, newChartData);\n    chart.config.data.datasets = newDataSets.map(function (newDataSet) {\n      // given the new set, find it's current match\n      var currentDataSet = find(currentDataSets, function (d) {\n        return d.label === newDataSet.label && d.type === newDataSet.type;\n      }); // There is no original to update, so simply add new one\n\n      if (!currentDataSet || !newDataSet.data) return _objectSpread({}, newDataSet);\n\n      if (!currentDataSet.data) {\n        // @ts-expect-error Need to refactor\n        currentDataSet.data = [];\n      } else {\n        // @ts-expect-error Need to refactor\n        currentDataSet.data.length = newDataSet.data.length;\n      } // copy in values\n\n\n      assign(currentDataSet.data, newDataSet.data); // apply dataset changes, but keep copied data\n\n      assign(currentDataSet, _objectSpread({}, newDataSet, {\n        data: currentDataSet.data\n      }));\n      return currentDataSet;\n    });\n    chart.update();\n  };\n\n  var destroyChart = function () {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  useEffect(function () {\n    if (redraw) {\n      destroyChart();\n      setTimeout(function () {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvas,\n    role: \"img\",\n    height: height,\n    width: width,\n    onClick: onClick\n  }, props), fallbackContent);\n}\n\nvar Chart = /*#__PURE__*/forwardRef(ChartComponent);\n\nfunction createTypedChart(type) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return React.createElement(Chart, Object.assign({}, props, {\n      ref: ref,\n      type: type\n    }));\n  });\n}\n\nvar Line = createTypedChart('line');\nvar Bar = createTypedChart('bar');\nvar Radar = createTypedChart('radar');\nvar Doughnut = createTypedChart('doughnut');\nvar PolarArea = createTypedChart('polarArea');\nvar Bubble = createTypedChart('bubble');\nvar Pie = createTypedChart('pie');\nvar Scatter = createTypedChart('scatter');\nexport { Bar, Bubble, Doughnut, Line, Pie, PolarArea, Radar, Scatter, Chart as default };","map":{"version":3,"sources":["../node_modules/@swc/helpers/src/_array_with_holes.js","../node_modules/@swc/helpers/src/_iterable_to_array.js","../node_modules/@swc/helpers/src/_non_iterable_rest.js","../node_modules/@swc/helpers/src/_define_property.js","../node_modules/@swc/helpers/src/_object_spread.js","../node_modules/@swc/helpers/src/_object_without_properties_loose.js","../node_modules/@swc/helpers/src/_object_without_properties.js","../node_modules/@swc/helpers/src/_sliced_to_array.js","../src/chart.tsx","../src/typedCharts.tsx"],"names":["defineProperty","objectWithoutPropertiesLoose","arrayWithHoles","iterableToArrayLimit","nonIterableRest"],"mappings":";;;;;;;;AAAe,SAAS,eAAT,CAAyB,GAAzB,EAA8B;AAC3C,MAAI,KAAK,CAAC,OAAN,CAAc,GAAd,CAAJ,EAAwB,OAAO,GAAP;AAC1B;;ACFe,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AAC7C,MAAI,MAAM,CAAC,QAAP,IAAmB,MAAM,CAAC,IAAD,CAAzB,IAAmC,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,IAA/B,MAAyC,oBAAhF,EAAsG,OAAO,KAAK,CAAC,IAAN,CAAW,IAAX,CAAP;AACxG;;ACFe,SAAS,gBAAT,GAA4B;AACzC,QAAM,IAAI,SAAJ,CAAc,sDAAd,CAAN;AACF;;ACFe,SAAS,eAAT,CAAyB,GAAzB,EAA8B,GAA9B,EAAmC,KAAnC,EAA0C;AACvD,MAAI,GAAG,IAAI,GAAX,EAAgB;AACd,IAAA,MAAM,CAAC,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC;AAC9B,MAAA,KAAK,EAAE,KADuB;AAE9B,MAAA,UAAU,EAAE,IAFkB;AAG9B,MAAA,YAAY,EAAE,IAHgB;AAI9B,MAAA,QAAQ,EAAE;AAJoB,KAAhC;AAMD,GAPD,MAOO;AACL,IAAA,GAAG,CAAC,GAAD,CAAH,GAAW,KAAX;AACD;;AAED,SAAO,GAAP;AACF;;ACXe,SAAS,aAAT,CAAuB,MAAvB,EAA+B;;2BACD;AACzC,QAAI,MAAM,GAAA,UAAA,CAAa,CAAb,CAAA,IAAmB,IAAnB,GAAuB,UAAA,CAAa,CAAb,CAAvB,GAAyC,EAAnD;AACA,QAAI,OAAO,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAd;;AAEA,QAAI,OAAO,MAAM,CAAC,qBAAd,KAAwC,UAA5C,EAAwD;AACtD,MAAA,OAAO,GAAG,OAAO,CAAC,MAAR,CAAe,MAAM,CAAC,qBAAP,CAA6B,MAA7B,EAAqC,MAArC,CAA4C,UAAU,GAAV,EAAe;AAClF,eAAO,MAAM,CAAC,wBAAP,CAAgC,MAAhC,EAAwC,GAAxC,EAA6C,UAApD;AACD,OAFwB,CAAf,CAAV;AAGD;;AAED,IAAA,OAAO,CAAC,OAAR,CAAgB,UAAU,GAAV,EAAe;AAC7BA,MAAAA,eAAc,CAAC,MAAD,EAAS,GAAT,EAAc,MAAM,CAAC,GAAD,CAApB,CAAdA;AACD,KAFD;AAGD,G;;AAbD,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,SAAS,CAAC,MAA9B,EAAsC,CAAC,EAAvC,EAAuC,KAAA,CAAA,CAAA,CAAA;;AAevC,SAAO,MAAP;AACF;;ACnBe,SAAS,6BAAT,CAAuC,MAAvC,EAA+C,QAA/C,EAAyD;AACtE,MAAI,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAI,MAAM,GAAG,EAAb;AACA,MAAI,UAAU,GAAG,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAjB;AACA,MAAI,GAAJ,EAAS,CAAT;;AAEA,OAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,UAAU,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,IAAA,GAAG,GAAG,UAAU,CAAC,CAAD,CAAhB;AACA,QAAI,QAAQ,CAAC,OAAT,CAAiB,GAAjB,KAAyB,CAA7B,EAAgC;AAChC,IAAA,MAAM,CAAC,GAAD,CAAN,GAAc,MAAM,CAAC,GAAD,CAApB;AACD;;AAED,SAAO,MAAP;AACF;;ACXe,SAAS,wBAAT,CAAkC,MAAlC,EAA0C,QAA1C,EAAoD;AACjE,MAAI,MAAM,IAAI,IAAd,EAAoB,OAAO,EAAP;;AACpB,MAAI,MAAM,GAAGC,6BAA4B,CAAC,MAAD,EAAS,QAAT,CAAzC;;AACA,MAAI,GAAJ,EAAS,CAAT;;AAEA,MAAI,MAAM,CAAC,qBAAX,EAAkC;AAChC,QAAI,gBAAgB,GAAG,MAAM,CAAC,qBAAP,CAA6B,MAA7B,CAAvB;;AAEA,SAAK,CAAC,GAAG,CAAT,EAAY,CAAC,GAAG,gBAAgB,CAAC,MAAjC,EAAyC,CAAC,EAA1C,EAA8C;AAC5C,MAAA,GAAG,GAAG,gBAAgB,CAAC,CAAD,CAAtB;AACA,UAAI,QAAQ,CAAC,OAAT,CAAiB,GAAjB,KAAyB,CAA7B,EAAgC;AAChC,UAAA,CAAK,MAAM,CAAC,SAAP,CAAiB,oBAAjB,CAAsC,IAAtC,CAA2C,MAA3C,EAAmD,GAAnD,CAAL,EAA8D;AAC9D,MAAA,MAAM,CAAC,GAAD,CAAN,GAAc,MAAM,CAAC,GAAD,CAApB;AACD;AACF;;AAED,SAAO,MAAP;AACF;;ACfe,SAAS,cAAT,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC;AAC7C,SAAOC,eAAc,CAAC,GAAD,CAAdA,IAAuBC,gBAAoB,CAAC,GAAD,CAA3CD,IAAuDE,gBAAe,EAA7E;AACF;;SCWS,c,CAKP,M,EAeA,G,EACA;gBAhBA,MAc8B,CAb5B,M;MAAA,MAAM,GAAA,OAAA,KAAA,KAAA,CAAA,GAAG,GAAH,GAAM,O;MAAA,MAAA,GADd,MAc8B,CAZ5B,K;MAAA,KAAK,GAAA,MAAA,KAAA,KAAA,CAAA,GAAG,GAAH,GAAM,M;MAAA,OAAA,GAFb,MAc8B,CAX5B,M;MAAA,MAAM,GAAA,OAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,O;MACd,IAAI,GAJN,MAc8B,CAV5B,I;MACA,IAAI,GALN,MAc8B,CAT5B,I;MACA,OAAO,GANT,MAc8B,CAR5B,O;MAAO,QAAA,GANT,MAc8B,CAP5B,O;MAAA,OAAO,GAAA,QAAA,KAAA,KAAA,CAAA,GAAG,EAAH,GAAK,Q;MACZ,iBAAiB,GARnB,MAc8B,CAN5B,iB;MACA,iBAAiB,GATnB,MAc8B,CAL5B,iB;MACA,kBAAkB,GAVpB,MAc8B,CAJ5B,kB;MACA,eAAe,GAXjB,MAc8B,CAH5B,e;MACS,WAAW,GAZtB,MAc8B,CAF5B,O;MACG,KAAK,GAAA,wBAAA,CAbV,MAaU,EACoB,CAb5B,QAa4B,EAZ5B,OAY4B,EAX5B,QAW4B,EAV5B,MAU4B,EAT5B,MAS4B,EAR5B,SAQ4B,EAP5B,SAO4B,EAN5B,mBAM4B,EAL5B,mBAK4B,EAJ5B,oBAI4B,EAH5B,iBAG4B,EAF5B,SAE4B,CADpB,C;;AAOV,MAAM,MAAM,GAAG,MAAM,CAAoB,IAApB,CAArB;AAEA,MAAM,YAAY,GAAG,OAAO,CAAiB,YAAM;AACjD,QAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;AAC9B,aAAO,MAAM,CAAC,OAAP,GACH,IAAI,CAAC,MAAM,CAAC,OAAR,CADD,GAEH;AACE,QAAA,QAAQ,EAAE;AADZ,OAFJ;AAKD,KAND,MAMO,OAAO,KAAK,CAAC,EAAD,EAAK,IAAL,CAAZ;AACR,GAR2B,EAQzB,CAAC,IAAD,EAAO,MAAM,CAAC,OAAd,CARyB,CAA5B;;AAUA,MAA0B,IAAwB,GAAA,cAAA,CAAxB,QAAQ,EAAgB,CAAlD;AAAA,MAAO,KAAK,GAAc,IAAwB,CAAA,CAAA,CAAlD;AAAA,MAAc,QAAQ,GAAI,IAAwB,CAAA,CAAA,CAAlD;;AAEA,EAAA,mBAAmB,CAA6B,GAA7B,EAAkC,YAAA;AAAM,WAAA,KAAA;GAAxC,EAA+C,CAAC,KAAD,CAA/C,CAAnB;;AAEA,MAAM,WAAW,GAAG,YAAM;AACxB,QAAA,CAAK,MAAM,CAAC,OAAZ,EAAqB;AAErB,IAAA,QAAQ,CACN,IAAI,OAAJ,CAAY,MAAM,CAAC,OAAnB,EAA4B;AAC1B,MAAA,IAAI,EAAJ,IAD0B;AAE1B,MAAA,IAAI,EAAE,YAFoB;AAG1B,MAAA,OAAO,EAAP,OAH0B;AAI1B,MAAA,OAAO,EAAP;AAJ0B,KAA5B,CADM,CAAR;AAQD,GAXD;;AAaA,MAAM,OAAO,GAAG,UAAC,KAAD,EAA0C;AACxD,QAAI,WAAJ,EAAiB;AACf,MAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,QAAA,CAAK,KAAL,EAAY;AAEZ,IAAA,iBAAiB,IACf,iBAAiB,CACf,KAAK,CAAC,yBAAN,CACE,KAAK,CAAC,WADR,EAEE,SAFF,EAGE;AAAE,MAAA,SAAS,EAAE;AAAb,KAHF,EAIE,KAJF,CADe,EAOf,KAPe,CADnB;AAUA,IAAA,iBAAiB,IACf,iBAAiB,CACf,KAAK,CAAC,yBAAN,CACE,KAAK,CAAC,WADR,EAEE,SAFF,EAGE;AAAE,MAAA,SAAS,EAAE;AAAb,KAHF,EAIE,KAJF,CADe,EAOf,KAPe,CADnB;AAUA,IAAA,kBAAkB,IAChB,kBAAkB,CAChB,KAAK,CAAC,yBAAN,CACE,KAAK,CAAC,WADR,EAEE,OAFF,EAGE;AAAE,MAAA,SAAS,EAAE;AAAb,KAHF,EAIE,KAJF,CADgB,EAOhB,KAPgB,CADpB;AAUD,GArCD;;AAuCA,MAAM,WAAW,GAAG,YAAM;AACxB,QAAA,CAAK,KAAL,EAAY;;AAEZ,QAAI,OAAJ,EAAa;AACX,MAAA,KAAK,CAAC,OAAN,GAAa,aAAA,CAAA,EAAA,EAAQ,OAAR,CAAb;AACD;;AAED,QAAA,CAAK,KAAK,CAAC,MAAN,CAAa,IAAlB,EAAwB;AACtB,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,GAAoB,YAApB;AACA,MAAA,KAAK,CAAC,MAAN;AACA;AACD;;AAED,QAAkB,GAAgB,GAAsB,YAAY,CAA5D,QAAR;AAAA,QAAkB,WAAW,GAAX,GAAgB,KAAA,KAAA,CAAhB,GAAc,EAAd,GAAA,GAAlB;AAAA,QAAuC,YAAY,GAAA,wBAAA,CAAK,YAAL,EAAiB,CAA5D,UAA4D,CAAjB,CAAnD;;AACA,QAA2C,KAAiB,GAAjB,KAAK,CAAC,MAAN,CAAa,IAAxD;AAAA,QAAkB,IAAoB,GAAK,KAAiB,CAApD,QAAR;AAAA,QAAkB,eAAe,GAAf,IAAoB,KAAA,KAAA,CAApB,GAAkB,EAAlB,GAAA,IAAlB,CAdwB,C;;AAiBxB,IAAA,MAAM,CAAC,KAAK,CAAC,MAAN,CAAa,IAAd,EAAoB,YAApB,CAAN;AAEA,IAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,QAAlB,GAA6B,WAAW,CAAC,GAAZ,CAAgB,UAAC,UAAD,EAAqB;;AAEhE,UAAM,cAAc,GAAG,IAAI,CACzB,eADyB,EAEzB,UAAA,CAAA,EAAC;AAAI,eAAA,CAAC,CAAC,KAAF,KAAY,UAAU,CAAC,KAAvB,IAAgC,CAAC,CAAC,IAAF,KAAW,UAAU,CAAC,IAAtD;OAFoB,CAA3B,CAFgE,C;;AAQhE,UAAA,CAAK,cAAL,IAAmB,CAAK,UAAU,CAAC,IAAnC,EAAyC,OAAA,aAAA,CAAA,EAAA,EAAY,UAAZ,CAAA;;AAEzC,UAAA,CAAK,cAAc,CAAC,IAApB,EAA0B;;AAExB,QAAA,cAAc,CAAC,IAAf,GAAsB,EAAtB;AACD,OAHD,MAGO;;AAEL,QAAA,cAAc,CAAC,IAAf,CAAoB,MAApB,GAA6B,UAAU,CAAC,IAAX,CAAgB,MAA7C;AACD,OAhB+D,C;;;AAmBhE,MAAA,MAAM,CAAC,cAAc,CAAC,IAAhB,EAAsB,UAAU,CAAC,IAAjC,CAAN,CAnBgE,C;;AAsBhE,MAAA,MAAM,CAAC,cAAD,EAAe,aAAA,CAAA,EAAA,EAAO,UAAP,EAAiB;AAAE,QAAA,IAAI,EAAE,cAAc,CAAC;AAAvB,OAAjB,CAAf,CAAN;AACA,aAAO,cAAP;AACD,KAxB4B,CAA7B;AA0BA,IAAA,KAAK,CAAC,MAAN;AACD,GA9CD;;AAgDA,MAAM,YAAY,GAAG,YAAM;AACzB,QAAI,KAAJ,EAAW,KAAK,CAAC,OAAN;AACZ,GAFD;;AAIA,EAAA,SAAS,CAAC,YAAM;AACd,IAAA,WAAW;AAEX,WAAO,YAAA;AAAM,aAAA,YAAY,EAAZ;KAAb;AACD,GAJQ,EAIN,EAJM,CAAT;AAMA,EAAA,SAAS,CAAC,YAAM;AACd,QAAI,MAAJ,EAAY;AACV,MAAA,YAAY;AACZ,MAAA,UAAU,CAAC,YAAM;AACf,QAAA,WAAW;AACZ,OAFS,EAEP,CAFO,CAAV;AAGD,KALD,MAKO;AACL,MAAA,WAAW;AACZ;AACF,GATQ,CAAT;AAWA,SAAA,aAAA,KAAA,CAAA,aAAA,CACG,QADH,EACG,MAAA,CAAA,MAAA,CAAA;AACC,IAAA,GAAG,EAAE,MADN;AAEC,IAAA,IAAI,EAAC,KAFN;AAGC,IAAA,MAAM,EAAE,MAHT;AAIC,IAAA,KAAK,EAAE,KAJR;AAKC,IAAA,OAAO,EAAE;AALV,GAAA,EAMK,KANL,CADH,EASK,eATL,CAAA;AAYD;;AAEW,IAAC,KAAK,GAAA,aAAG,UAAU,CAAC,cAAD,CAAnB;;SC3LH,gB,CAAsC,I,EAAS;AACtD,SAAA,aAAO,UAAU,CACf,UAAC,KAAD,EAAQ,GAAR,EAAW;AAAK,WAAA,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,KAAL,EAAU;AAAE,MAAA,GAAG,EAAE,GAAP;AAAY,MAAA,IAAI,EAAE;AAAlB,KAAV,CAAN,CAAA;GADD,CAAjB;AAGD;;AAEW,IAAC,IAAI,GAAG,gBAAgB,CAAC,MAAD,CAAxB;AAEA,IAAC,GAAG,GAAG,gBAAgB,CAAC,KAAD,CAAvB;AAEA,IAAC,KAAK,GAAG,gBAAgB,CAAC,OAAD,CAAzB;AAEA,IAAC,QAAQ,GAAG,gBAAgB,CAAC,UAAD,CAA5B;AAEA,IAAC,SAAS,GAAG,gBAAgB,CAAC,WAAD,CAA7B;AAEA,IAAC,MAAM,GAAG,gBAAgB,CAAC,QAAD,CAA1B;AAEA,IAAC,GAAG,GAAG,gBAAgB,CAAC,KAAD,CAAvB;AAEA,IAAC,OAAO,GAAG,gBAAgB,CAAC,SAAD,CAA3B","sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import defineProperty from './_define_property';\n\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n","import objectWithoutPropertiesLoose from './_object_without_properties_loose';\n\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from './_array_with_holes';\nimport iterableToArrayLimit from './_iterable_to_array';\nimport nonIterableRest from './_non_iterable_rest';\n\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","import React, {\n  useEffect,\n  useState,\n  useRef,\n  useImperativeHandle,\n  useMemo,\n  forwardRef,\n} from 'react';\nimport type { Ref, MouseEvent } from 'react';\nimport ChartJS from 'chart.js/auto';\nimport type { ChartData, ChartType, DefaultDataPoint } from 'chart.js';\nimport merge from 'lodash/merge';\nimport assign from 'lodash/assign';\nimport find from 'lodash/find';\n\nimport { Props, ChartJSOrUndefined, TypedChartComponent } from './types';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    type,\n    data,\n    options,\n    plugins = [],\n    getDatasetAtEvent,\n    getElementAtEvent,\n    getElementsAtEvent,\n    fallbackContent,\n    onClick: onClickProp,\n    ...props\n  }: Props<TType, TData, TLabel>,\n  ref: Ref<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJSOrUndefined<TType, TData, TLabel>;\n  type TypedChartData = ChartData<TType, TData, TLabel>;\n\n  const canvas = useRef<HTMLCanvasElement>(null);\n\n  const computedData = useMemo<TypedChartData>(() => {\n    if (typeof data === 'function') {\n      return canvas.current\n        ? data(canvas.current)\n        : {\n            datasets: [],\n          };\n    } else return merge({}, data);\n  }, [data, canvas.current]);\n\n  const [chart, setChart] = useState<TypedChartJS>();\n\n  useImperativeHandle<TypedChartJS, TypedChartJS>(ref, () => chart, [chart]);\n\n  const renderChart = () => {\n    if (!canvas.current) return;\n\n    setChart(\n      new ChartJS(canvas.current, {\n        type,\n        data: computedData,\n        options,\n        plugins,\n      })\n    );\n  };\n\n  const onClick = (event: MouseEvent<HTMLCanvasElement>) => {\n    if (onClickProp) {\n      onClickProp(event);\n    }\n\n    if (!chart) return;\n\n    getDatasetAtEvent &&\n      getDatasetAtEvent(\n        chart.getElementsAtEventForMode(\n          event.nativeEvent,\n          'dataset',\n          { intersect: true },\n          false\n        ),\n        event\n      );\n    getElementAtEvent &&\n      getElementAtEvent(\n        chart.getElementsAtEventForMode(\n          event.nativeEvent,\n          'nearest',\n          { intersect: true },\n          false\n        ),\n        event\n      );\n    getElementsAtEvent &&\n      getElementsAtEvent(\n        chart.getElementsAtEventForMode(\n          event.nativeEvent,\n          'index',\n          { intersect: true },\n          false\n        ),\n        event\n      );\n  };\n\n  const updateChart = () => {\n    if (!chart) return;\n\n    if (options) {\n      chart.options = { ...options };\n    }\n\n    if (!chart.config.data) {\n      chart.config.data = computedData;\n      chart.update();\n      return;\n    }\n\n    const { datasets: newDataSets = [], ...newChartData } = computedData;\n    const { datasets: currentDataSets = [] } = chart.config.data;\n\n    // copy values\n    assign(chart.config.data, newChartData);\n\n    chart.config.data.datasets = newDataSets.map((newDataSet: any) => {\n      // given the new set, find it's current match\n      const currentDataSet = find(\n        currentDataSets,\n        d => d.label === newDataSet.label && d.type === newDataSet.type\n      );\n\n      // There is no original to update, so simply add new one\n      if (!currentDataSet || !newDataSet.data) return { ...newDataSet };\n\n      if (!currentDataSet.data) {\n        // @ts-expect-error Need to refactor\n        currentDataSet.data = [];\n      } else {\n        // @ts-expect-error Need to refactor\n        currentDataSet.data.length = newDataSet.data.length;\n      }\n\n      // copy in values\n      assign(currentDataSet.data, newDataSet.data);\n\n      // apply dataset changes, but keep copied data\n      assign(currentDataSet, { ...newDataSet, data: currentDataSet.data });\n      return currentDataSet;\n    });\n\n    chart.update();\n  };\n\n  const destroyChart = () => {\n    if (chart) chart.destroy();\n  };\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  useEffect(() => {\n    if (redraw) {\n      destroyChart();\n      setTimeout(() => {\n        renderChart();\n      }, 0);\n    } else {\n      updateChart();\n    }\n  });\n\n  return (\n    <canvas\n      ref={canvas}\n      role='img'\n      height={height}\n      width={width}\n      onClick={onClick}\n      {...props}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport { ChartType } from 'chart.js';\n\nimport { Props, ChartJSOrUndefined, TypedChartComponent } from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(type: T) {\n  return forwardRef<ChartJSOrUndefined<T>, Omit<Props<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = createTypedChart('line');\n\nexport const Bar = createTypedChart('bar');\n\nexport const Radar = createTypedChart('radar');\n\nexport const Doughnut = createTypedChart('doughnut');\n\nexport const PolarArea = createTypedChart('polarArea');\n\nexport const Bubble = createTypedChart('bubble');\n\nexport const Pie = createTypedChart('pie');\n\nexport const Scatter = createTypedChart('scatter');\n"]},"metadata":{},"sourceType":"module"}