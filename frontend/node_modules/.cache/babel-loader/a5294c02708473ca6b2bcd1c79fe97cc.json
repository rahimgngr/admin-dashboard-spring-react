{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/frontend/src/component/UserList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, InputGroup, Table, Button, FormControl, ButtonGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ToastComponent from \"./ToastComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(3);\n  const [show, setShow] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [searchRes, setSearchRes] = useState([]); // pagination set numbers\n\n  const lastIndex = currentPage * usersPerPage;\n  const firstIndex = lastIndex - usersPerPage;\n  const currentUsers = users.slice(firstIndex, lastIndex);\n  const totalPages = Math.ceil(users.length / usersPerPage);\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/admin/get\").then(res => setUsers(res.data));\n  }, []); // delete data with spesific id\n\n  const deleteUser = async userId => {\n    await axios.delete(`http://localhost:8080/admin/ ${userId}`).then(res => {\n      if (res.data != null) {\n        setShow(true);\n        setUsers(users.filter(user => user.id !== userId));\n        setTimeout(() => setShow(false), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  }; // Button pagination stuff\n\n\n  const firstPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const lastPage = () => {\n    if (currentPage < Math.ceil(users.length / usersPerPage)) {\n      setCurrentPage(Math.ceil(users.length / usersPerPage));\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage < Math.ceil(users.length / usersPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  }; // formcontrol page number control stuff\n\n\n  const changePage = e => {\n    setCurrentPage(e.target.value <= totalPages ? e.target.value : totalPages);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      style: {\n        margin: \"45px 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: show ? \"block\" : \"none\"\n        },\n        children: /*#__PURE__*/_jsxDEV(ToastComponent, {\n          children: {\n            show: show,\n            message: \"User Deleted!\",\n            type: \"danger\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"left\"\n          },\n          children: \"User List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"search\",\n              placeholder: \"Search\",\n              className: \"me-2\",\n              \"aria-label\": \"Search\",\n              className: \"bg-dark text-white\",\n              onChange: searchChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          variant: \"dark\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Role\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: users.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"2\",\n                children: \"No Users Found..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this) : currentUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: user.role\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: \"/edit-user/\" + user.id,\n                    className: \"btn btn-sm btn-outline-primary\",\n                    children: \"edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    size: \"sm\",\n                    variant: \"outline-danger\",\n                    onClick: () => deleteUser(user.id),\n                    children: \"delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)]\n            }, user.id ? user.id : index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"left\"\n          },\n          children: [\" \", currentPage, \" of \", totalPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            float: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            size: \"sm\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline-info\",\n              disabled: currentPage === 1 ? true : false,\n              onClick: firstPage,\n              children: \"First\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline-info\",\n              disabled: currentPage === 1 ? true : false,\n              onClick: prevPage,\n              children: \"Prev\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              style: {\n                textAlign: \"center\",\n                width: \"40px\",\n                color: \"white\"\n              },\n              className: \"bg-dark\",\n              name: \"currentPage\",\n              defaultValue: currentPage,\n              onChange: changePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline-info\",\n              disabled: currentPage === totalPages ? true : false,\n              onClick: nextPage,\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"button\",\n              variant: \"outline-info\",\n              disabled: currentPage === totalPages ? true : false,\n              onClick: lastPage,\n              children: \"Last\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"ODcIrlmynVnJiOJxa8+FXujkAGs=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/frontend/src/component/UserList.js"],"names":["React","useState","useEffect","axios","Card","InputGroup","Table","Button","FormControl","ButtonGroup","Link","ToastComponent","UserList","users","setUsers","currentPage","setCurrentPage","usersPerPage","show","setShow","search","setSearch","searchRes","setSearchRes","lastIndex","firstIndex","currentUsers","slice","totalPages","Math","ceil","length","get","then","res","data","deleteUser","userId","delete","filter","user","id","setTimeout","firstPage","prevPage","lastPage","nextPage","changePage","e","target","value","margin","display","message","type","float","searchChange","map","index","userName","role","textAlign","width","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Card,\n  InputGroup,\n  Table,\n  Button,\n  FormControl,\n  ButtonGroup,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport ToastComponent from \"./ToastComponent\";\n\nexport default function UserList() {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(3);\n  const [show, setShow] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [searchRes, setSearchRes] = useState([]);\n\n  // pagination set numbers\n  const lastIndex = currentPage * usersPerPage;\n  const firstIndex = lastIndex - usersPerPage;\n  const currentUsers = users.slice(firstIndex, lastIndex);\n  const totalPages = Math.ceil(users.length / usersPerPage);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:8080/admin/get\")\n      .then((res) => setUsers(res.data));\n  }, []);\n\n  // delete data with spesific id\n  const deleteUser = async (userId) => {\n    await axios.delete(`http://localhost:8080/admin/ ${userId}`).then((res) => {\n      if (res.data != null) {\n        setShow(true);\n        setUsers(users.filter((user) => user.id !== userId));\n        setTimeout(() => setShow(false), 1500);\n      } else {\n        setShow(false);\n      }\n    });\n  };\n\n  // Button pagination stuff\n  const firstPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const lastPage = () => {\n    if (currentPage < Math.ceil(users.length / usersPerPage)) {\n      setCurrentPage(Math.ceil(users.length / usersPerPage));\n    }\n  };\n  const nextPage = () => {\n    if (currentPage < Math.ceil(users.length / usersPerPage)) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  // formcontrol page number control stuff\n  const changePage = (e) => {\n    setCurrentPage(e.target.value <= totalPages ? e.target.value : totalPages);\n  };\n\n  return (\n    <div>\n      <Card\n        className={\"border border-dark bg-dark text-white\"}\n        style={{ margin: \"45px 0\" }}\n      >\n        <div style={{ display: show ? \"block\" : \"none\" }}>\n          <ToastComponent\n            children={{\n              show: show,\n              message: \"User Deleted!\",\n              type: \"danger\",\n            }}\n          />\n        </div>\n        <Card.Header>\n          <div style={{ float: \"left\" }}>User List</div>\n          <div style={{ float: \"right\" }}>\n            <InputGroup size=\"sm\">\n              <FormControl\n                type=\"search\"\n                placeholder=\"Search\"\n                className=\"me-2\"\n                aria-label=\"Search\"\n                className={\"bg-dark text-white\"}\n                onChange={searchChange}\n              />\n            </InputGroup>\n          </div>\n        </Card.Header>\n        <Card.Body>\n          <Table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <td>Username</td>\n                <td>Role</td>\n              </tr>\n            </thead>\n            <tbody>\n              {users.length === 0 ? (\n                <tr align=\"center\">\n                  <td colSpan=\"2\">No Users Found..</td>\n                </tr>\n              ) : (\n                currentUsers.map((user, index) => (\n                  <tr key={user.id ? user.id : index}>\n                    <td>{user.userName}</td>\n                    <td>{user.role}</td>\n                    <td>\n                      <ButtonGroup>\n                        <Link\n                          to={\"/edit-user/\" + user.id}\n                          className=\"btn btn-sm btn-outline-primary\"\n                        >\n                          edit\n                        </Link>\n\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline-danger\"\n                          onClick={() => deleteUser(user.id)}\n                        >\n                          delete\n                        </Button>\n                      </ButtonGroup>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </Table>\n        </Card.Body>\n        <Card.Footer>\n          <div style={{ float: \"left\" }}>\n            {\" \"}\n            {currentPage} of {totalPages}\n          </div>\n          <div style={{ float: \"right\" }}>\n            <InputGroup size=\"sm\">\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === 1 ? true : false}\n                onClick={firstPage}\n              >\n                First\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === 1 ? true : false}\n                onClick={prevPage}\n              >\n                Prev\n              </Button>\n\n              <FormControl\n                style={{\n                  textAlign: \"center\",\n                  width: \"40px\",\n                  color: \"white\",\n                }}\n                className={\"bg-dark\"}\n                name=\"currentPage\"\n                defaultValue={currentPage}\n                onChange={changePage}\n              />\n\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === totalPages ? true : false}\n                onClick={nextPage}\n              >\n                Next\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline-info\"\n                disabled={currentPage === totalPages ? true : false}\n                onClick={lastPage}\n              >\n                Last\n              </Button>\n            </InputGroup>\n          </div>\n        </Card.Footer>\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}