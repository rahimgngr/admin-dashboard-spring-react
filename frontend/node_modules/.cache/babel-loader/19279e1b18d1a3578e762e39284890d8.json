{"ast":null,"code":"var _jsxFileName = \"/home/rahimgng/vscode/admin-dashboard/src/component/ProgressList.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProgressList() {\n  _s();\n\n  const [chartData, setChartData] = useState({});\n  const [projects, setProjects] = useState([]);\n  const groupingArr = projects.reduce((projectsSoFar, {\n    userName,\n    projectName\n  }) => {\n    if (!projectsSoFar[userName]) projectsSoFar[userName] = [];\n    projectsSoFar[userName].push(projectName);\n    return projectsSoFar;\n  }, {} //initial valuesss\n  );\n  const result = groupingArr.reduce((total, value) => {\n    total[value] = (total[value] || 0) + 1;\n    return total;\n  }, {});\n  console.log(\"ne\" + result);\n  console.log(groupingArr);\n\n  const chart = () => {\n    let proje = [];\n    let user = [];\n    axios // .get(\"http://dummy.restapiexample.com/api/v1/employees\")\n    .get(\"http://localhost:8080/progress/get/\").then(res => setProjects(res.data)).catch(err => {\n      console.log(err);\n    });\n    {\n      Object.keys(groupingArr).map((item, index) => {\n        user.push(item);\n        return index;\n      });\n    } // for (const dataObj of projects) {\n    //   proje.push(dataObj.id);\n    //   user.push(dataObj.userName);\n    // }\n\n    setChartData({\n      labels: user,\n      datasets: [{\n        label: \"which user which project\",\n        data: proje,\n        backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n        borderWidth: 4\n      }]\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          title: {\n            text: \"THICCNESS SCALE\",\n            display: true\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                autoSkip: true,\n                maxTicksLimit: 10,\n                beginAtZero: true\n              },\n              gridLines: {\n                display: false\n              }\n            }],\n            xAxes: [{\n              gridLines: {\n                display: false\n              }\n            }]\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressList, \"Ct3TGGe0CkVxnPWeSYCgw65M3aE=\");\n\n_c = ProgressList;\nexport default ProgressList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgressList\");","map":{"version":3,"sources":["/home/rahimgng/vscode/admin-dashboard/src/component/ProgressList.js"],"names":["useEffect","useState","Line","axios","ProgressList","chartData","setChartData","projects","setProjects","groupingArr","reduce","projectsSoFar","userName","projectName","push","result","total","value","console","log","chart","proje","user","get","then","res","data","catch","err","Object","keys","map","item","index","labels","datasets","label","backgroundColor","borderWidth","responsive","title","text","display","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes"],"mappings":"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","sourcesContent":["/* eslint-disable no-lone-blocks */\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\n\nfunction ProgressList() {\n  const [chartData, setChartData] = useState({});\n  const [projects, setProjects] = useState([]);\n\n  const groupingArr = projects.reduce(\n    (projectsSoFar, { userName, projectName }) => {\n      if (!projectsSoFar[userName]) projectsSoFar[userName] = [];\n      projectsSoFar[userName].push(projectName);\n      return projectsSoFar;\n    },\n    {} //initial valuesss\n  );\n  const result = groupingArr.reduce((total, value) => {\n    total[value] = (total[value] || 0) + 1;\n    return total;\n  }, {});\n\n  console.log(\"ne\" + result);\n  console.log(groupingArr);\n  const chart = () => {\n    let proje = [];\n    let user = [];\n    axios\n      // .get(\"http://dummy.restapiexample.com/api/v1/employees\")\n      .get(\"http://localhost:8080/progress/get/\")\n      .then((res) => setProjects(res.data))\n      .catch((err) => {\n        console.log(err);\n      });\n    {\n      Object.keys(groupingArr).map((item, index) => {\n        user.push(item);\n        return index;\n      });\n    }\n    // for (const dataObj of projects) {\n    //   proje.push(dataObj.id);\n    //   user.push(dataObj.userName);\n    // }\n    setChartData({\n      labels: user,\n      datasets: [\n        {\n          label: \"which user which project\",\n          data: proje,\n          backgroundColor: [\"rgba(75, 192, 192, 0.6)\"],\n          borderWidth: 4,\n        },\n      ],\n    });\n  };\n\n  useEffect(() => {\n    chart();\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Projects</h1>\n      <div>\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            title: { text: \"THICCNESS SCALE\", display: true },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressList;\n"]},"metadata":{},"sourceType":"module"}